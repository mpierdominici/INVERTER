#include <avr/io.h>
#include <avr/interrupt.h>

// Look up tables with 200 entries each, normalised to have max value of 1600 which is the period of the PWM loaded into register ICR1.
int lookUp1[] = {800,826,851,876,901,926,950,975,999,1024,1048,1071,1095,1118,1141,1164,1186,1208,1229,1250,1271,1291,1310,1330,1348,1366,1384,1401,1417,1433,1448,1462,1476,1489,1502,1513,1524,1535,1544,1553,1561,1569,1575,1581,1586,1591,1594,1597,1599,1600,1600,1600,1599,1597,1594,1591,1586,1581,1575,1569,1561,1553,1544,1535,1524,1513,1502,1489,1476,1462,1448,1433,1417,1401,1384,1366,1348,1330,1310,1291,1271,1250,1229,1208,1186,1164,1141,1118,1095,1071,1048,1024,999,975,950,926,901,876,851,826,801,775,750,725,700,675,651,626,602,577,553,530,506,483,460,437,415,393,372,351,330,310,291,271,253,235,217,200,184,168,153,139,125,112,99,88,77,66,57,48,40,32,26,20,15,10,7,4,2,1,0,1,2,4,7,10,15,20,26,32,40,48,57,66,77,88,99,112,125,139,153,168,184,200,217,235,253,271,291,310,330,351,372,393,415,437,460,483,506,530,553,577,602,626,651,675,700,725,750,775};

int lookUp2[] = {1493,1480,1467,1453,1438,1422,1406,1389,1372,1354,1336,1317,1297,1277,1257,1236,1215,1193,1171,1149,1126,1103,1079,1056,1032,1008,983,959,934,909,884,859,834,809,784,759,734,709,684,659,634,610,585,561,537,514,490,467,445,422,401,379,358,337,317,297,278,259,241,223,206,189,174,158,144,130,116,104,92,80,70,60,51,42,35,28,22,16,12,8,5,3,1,1,1,2,3,6,9,13,18,24,30,37,45,54,63,73,84,95,108,121,134,148,163,179,195,212,229,247,265,284,304,324,344,365,386,408,430,452,475,498,522,545,569,593,618,642,667,692,717,742,767,792,817,842,867,892,917,942,967,991,1016,1040,1064,1087,1111,1134,1156,1179,1201,1222,1243,1264,1284,1304,1323,1342,1360,1378,1395,1412,1427,1443,1457,1471,1485,1497,1509,1521,1531,1541,1550,1559,1566,1573,1579,1585,1589,1593,1596,1598,1600,1600,1600,1599,1598,1595,1592,1588,1583,1577,1571,1564,1556,1547,1538,1528,1517,1506};


void setup(){
    // Register initilisation, see datasheet for more detail.
    TCCR1A = 0b10100010;
       /*10 clear on match, set at BOTTOM for compA.
         10 clear on match, set at BOTTOM for compB.
         00
         10 WGM1 1:0 for waveform 15.
       */
    TCCR1B = 0b00011001;
       /*000
         11 WGM1 3:2 for waveform 15.
         001 no prescale on the counter.
       */
    TIMSK1 = 0b00000001;
       /*0000000
         1 TOV1 Flag interrupt enable. 
       */
    ICR1   = 1600;     // Period for 16MHz crystal, for a switching frequency of 100KHz for 200 subdevisions per 50Hz sin wave cycle.
    sei();             // Enable global interrupts.
    DDRB = 0b00000110; // Set PB1 and PB2 as outputs.
    pinMode(13,OUTPUT);
}

void loop(){; /*Do nothing . . . . forever!*/}

ISR(TIMER1_OVF_vect){
    static int num;
    // change duty-cycle every period.
    OCR1A = lookUp1[num];
    OCR1B = lookUp2[num];
    
    if(++num >= 200){ // Pre-increment num then check it's below 200.
       num = 0;       // Reset num.
     }
}
